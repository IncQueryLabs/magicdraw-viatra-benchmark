package com.incquerylabs.magicdraw.benchmark.queries.library

import "http://www.nomagic.com/magicdraw/UML/2.5.1.1"

// Activities

//Pattern that queries elements with the stereotype 'Continuous' or other stereotypes generalizing it.
pattern Continuous(Element : NamedElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Continuous");
}

//Pattern that queries the 'rate' attribute of elements with the stereotype 'Continuous'.
pattern Continuous_rate(Element : NamedElement, Value: InstanceSpecification) {
	find Continuous(Element, stereotype);
	find taggedValue(Element, stereotype, "rate", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'ControlOperator' or other stereotypes generalizing it.
pattern ControlOperator(Element : ParameterableElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ControlOperator");
}

//Pattern that queries elements with the stereotype 'Discrete' or other stereotypes generalizing it.
pattern Discrete(Element : NamedElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Discrete");
}

//Pattern that queries the 'rate' attribute of elements with the stereotype 'Discrete'.
pattern Discrete_rate(Element : NamedElement, Value: InstanceSpecification) {
	find Discrete(Element, stereotype);
	find taggedValue(Element, stereotype, "rate", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'NoBuffer' or other stereotypes generalizing it.
pattern NoBuffer(Element : ObjectNode, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "NoBuffer");
}

//Pattern that queries elements with the stereotype 'Optional' or other stereotypes generalizing it.
pattern Optional(Element : Parameter, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Optional");
}

//Pattern that queries elements with the stereotype 'Overwrite' or other stereotypes generalizing it.
pattern Overwrite(Element : ObjectNode, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Overwrite");
}

//Pattern that queries elements with the stereotype 'Probability' or other stereotypes generalizing it.
pattern Probability(Element : NamedElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Probability");
}

//Pattern that queries the 'probability' attribute of elements with the stereotype 'Probability'.
pattern Probability_probability(Element : NamedElement, Value: java String) {
	find Probability(Element, stereotype);
	find taggedValue(Element, stereotype, "probability", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Rate' or other stereotypes generalizing it.
pattern Rate(Element : NamedElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Rate");
}

//Pattern that queries the 'rate' attribute of elements with the stereotype 'Rate'.
pattern Rate_rate(Element : NamedElement, Value: InstanceSpecification) {
	find Rate(Element, stereotype);
	find taggedValue(Element, stereotype, "rate", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

// Allocations

//Pattern that queries elements with the stereotype 'Allocate' or other stereotypes generalizing it.
pattern Allocate(Element : Abstraction, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Allocate");
}

//Pattern that queries the 'sourceContext' attribute of elements with the stereotype 'Allocate'.
pattern Allocate_sourceContext(Element : Abstraction, Value: Classifier) {
	find Allocate(Element, stereotype);
	find taggedValue(Element, stereotype, "sourceContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'sourcePropertyPath' attribute of elements with the stereotype 'Allocate'.
pattern Allocate_sourcePropertyPath(Element : Abstraction, Value: Property) {
	find Allocate(Element, stereotype);
	find taggedValue(Element, stereotype, "sourcePropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetContext' attribute of elements with the stereotype 'Allocate'.
pattern Allocate_targetContext(Element : Abstraction, Value: Classifier) {
	find Allocate(Element, stereotype);
	find taggedValue(Element, stereotype, "targetContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetPropertyPath' attribute of elements with the stereotype 'Allocate'.
pattern Allocate_targetPropertyPath(Element : Abstraction, Value: Property) {
	find Allocate(Element, stereotype);
	find taggedValue(Element, stereotype, "targetPropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'AllocateActivityPartition' or other stereotypes generalizing it.
pattern AllocateActivityPartition(Element : ActivityPartition, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "AllocateActivityPartition");
}

//Blocks

//Pattern that queries elements with the stereotype 'AdjunctProperty' or other stereotypes generalizing it.
pattern AdjunctProperty(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "AdjunctProperty");
}

//Pattern that queries the 'principal' attribute of elements with the stereotype 'AdjunctProperty'.
pattern AdjunctProperty_principal(Element : Property, Value: NamedElement) {
	find AdjunctProperty(Element, stereotype);
	find taggedValue(Element, stereotype, "principal", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'BindingConnector' or other stereotypes generalizing it.
pattern BindingConnector(Element : Connector, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "BindingConnector");
}

//Pattern that queries elements with the stereotype 'Block' or other stereotypes generalizing it.
pattern Block(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Block");
}

//Pattern that queries the 'isEncapsulated' attribute of elements with the stereotype 'Block'.
pattern Block_isEncapsulated(Element : Class, Value: java Boolean) {
	find Block(Element, stereotype);
	find taggedValue(Element, stereotype, "isEncapsulated", taggedValue);
	BooleanTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'BoundReference' or other stereotypes generalizing it.
pattern BoundReference(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "BoundReference");
}

//Pattern that queries the 'bindingPath' attribute of elements with the stereotype 'BoundReference'.
pattern BoundReference_bindingPath(Element : Property, Value: Property) {
	find BoundReference(Element, stereotype);
	find taggedValue(Element, stereotype, "bindingPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'boundEnd' attribute of elements with the stereotype 'BoundReference'.
pattern BoundReference_boundEnd(Element : Property, Value: ConnectorEnd) {
	find BoundReference(Element, stereotype);
	find taggedValue(Element, stereotype, "boundEnd", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'lower' attribute of elements with the stereotype 'BoundReference'.
pattern BoundReference_lower(Element : Property, Value: java Integer) {
	find BoundReference(Element, stereotype);
	find taggedValue(Element, stereotype, "lower", taggedValue);
	IntegerTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'upper' attribute of elements with the stereotype 'BoundReference'.
pattern BoundReference_upper(Element : Property, Value: java Integer) {
	find BoundReference(Element, stereotype);
	find taggedValue(Element, stereotype, "upper", taggedValue);
	IntegerTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'ClassifierBehaviorProperty' or other stereotypes generalizing it.
pattern ClassifierBehaviorProperty(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ClassifierBehaviorProperty");
}

//Pattern that queries elements with the stereotype 'ConnectorProperty' or other stereotypes generalizing it.
pattern ConnectorProperty(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ConnectorProperty");
}

//Pattern that queries the 'connector' attribute of elements with the stereotype 'ConnectorProperty'.
pattern ConnectorProperty_connector(Element : Property, Value: Connector) {
	find ConnectorProperty(Element, stereotype);
	find taggedValue(Element, stereotype, "connector", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'DirectedRelationshipPropertyPath' or other stereotypes generalizing it.
pattern DirectedRelationshipPropertyPath(Element : DirectedRelationship, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "DirectedRelationshipPropertyPath");
}

//Pattern that queries the 'sourceContext' attribute of elements with the stereotype 'DirectedRelationshipPropertyPath'.
pattern DirectedRelationshipPropertyPath_sourceContext(Element : DirectedRelationship, Value: Classifier) {
	find DirectedRelationshipPropertyPath(Element, stereotype);
	find taggedValue(Element, stereotype, "sourceContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'sourcePropertyPath' attribute of elements with the stereotype 'DirectedRelationshipPropertyPath'.
pattern DirectedRelationshipPropertyPath_sourcePropertyPath(Element : DirectedRelationship, Value: Property) {
	find DirectedRelationshipPropertyPath(Element, stereotype);
	find taggedValue(Element, stereotype, "sourcePropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetContext' attribute of elements with the stereotype 'DirectedRelationshipPropertyPath'.
pattern DirectedRelationshipPropertyPath_targetContext(Element : DirectedRelationship, Value: Classifier) {
	find DirectedRelationshipPropertyPath(Element, stereotype);
	find taggedValue(Element, stereotype, "targetContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetPropertyPath' attribute of elements with the stereotype 'DirectedRelationshipPropertyPath'.
pattern DirectedRelationshipPropertyPath_targetPropertyPath(Element : DirectedRelationship, Value: Property) {
	find DirectedRelationshipPropertyPath(Element, stereotype);
	find taggedValue(Element, stereotype, "targetPropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'DistributedProperty' or other stereotypes generalizing it.
pattern DistributedProperty(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "DistributedProperty");
}

//Pattern that queries elements with the stereotype 'ElementPropertyPath' or other stereotypes generalizing it.
pattern ElementPropertyPath(Element : Element, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ElementPropertyPath");
}

//Pattern that queries elements with the stereotype 'EndPathMultiplicity' or other stereotypes generalizing it.
pattern EndPathMultiplicity(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "EndPathMultiplicity");
}

//Pattern that queries the 'lower' attribute of elements with the stereotype 'EndPathMultiplicity'.
pattern EndPathMultiplicity_lower(Element : Property, Value: java Integer) {
	find EndPathMultiplicity(Element, stereotype);
	find taggedValue(Element, stereotype, "lower", taggedValue);
	IntegerTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'upper' attribute of elements with the stereotype 'EndPathMultiplicity'.
pattern EndPathMultiplicity_upper(Element : Property, Value: java Integer) {
	find EndPathMultiplicity(Element, stereotype);
	find taggedValue(Element, stereotype, "upper", taggedValue);
	IntegerTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'NestedConnectorEnd' or other stereotypes generalizing it.
pattern NestedConnectorEnd(Element : ConnectorEnd, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "NestedConnectorEnd");
}

//Pattern that queries elements with the stereotype 'ParticipantProperty' or other stereotypes generalizing it.
pattern ParticipantProperty(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ParticipantProperty");
}

//Pattern that queries the 'end' attribute of elements with the stereotype 'ParticipantProperty'.
pattern ParticipantProperty_end(Element : Property, Value: Property) {
	find ParticipantProperty(Element, stereotype);
	find taggedValue(Element, stereotype, "end", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'PropertySpecificType' or other stereotypes generalizing it.
pattern PropertySpecificType(Element : Classifier, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "PropertySpecificType");
}

//Pattern that queries elements with the stereotype 'ValueType' or other stereotypes generalizing it.
pattern ValueType(Element : DataType, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ValueType");
}

//Pattern that queries the 'quantityKind' attribute of elements with the stereotype 'ValueType'.
pattern ValueType_quantityKind(Element : DataType, Value: InstanceSpecification) {
	find ValueType(Element, stereotype);
	find taggedValue(Element, stereotype, "quantityKind", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'unit' attribute of elements with the stereotype 'ValueType'.
pattern ValueType_unit(Element : DataType, Value: InstanceSpecification) {
	find ValueType(Element, stereotype);
	find taggedValue(Element, stereotype, "unit", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//ConstraintBlocks

//Pattern that queries elements with the stereotype 'ConstraintBlock' or other stereotypes generalizing it.
pattern ConstraintBlock(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ConstraintBlock");
}

//Pattern that queries the 'isEncapsulated' attribute of elements with the stereotype 'ConstraintBlock'.
pattern ConstraintBlock_isEncapsulated(Element : Class, Value: java Boolean) {
	find ConstraintBlock(Element, stereotype);
	find taggedValue(Element, stereotype, "isEncapsulated", taggedValue);
	BooleanTaggedValue.value(taggedValue, Value);
}

//DeprecatedElements

//Pattern that queries elements with the stereotype 'Allocated' or other stereotypes generalizing it.
pattern Allocated(Element : NamedElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Allocated");
}

//Pattern that queries the 'allocatedFrom' attribute of elements with the stereotype 'Allocated'.
pattern Allocated_allocatedFrom(Element : NamedElement, Value: NamedElement) {
	find Allocated(Element, stereotype);
	find taggedValue(Element, stereotype, "allocatedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'allocatedTo' attribute of elements with the stereotype 'Allocated'.
pattern Allocated_allocatedTo(Element : NamedElement, Value: NamedElement) {
	find Allocated(Element, stereotype);
	find taggedValue(Element, stereotype, "allocatedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'FlowPort' or other stereotypes generalizing it.
pattern FlowPort(Element : Port, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "FlowPort");
}

//Pattern that queries the 'direction' attribute of elements with the stereotype 'FlowPort'.
pattern FlowPort_direction(Element : Port, Value: EnumerationLiteral) {
	find FlowPort(Element, stereotype);
	find taggedValue(Element, stereotype, "direction", taggedValue);
	  ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'isAtomic' attribute of elements with the stereotype 'FlowPort'.
pattern FlowPort_isAtomic(Element : Port, Value: java Boolean) {
	find FlowPort(Element, stereotype);
	find taggedValue(Element, stereotype, "isAtomic", taggedValue);
	BooleanTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'FlowSpecification' or other stereotypes generalizing it.
pattern FlowSpecification(Element : Interface, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "FlowSpecification");
}

//Pattern that queries elements with the stereotype 'RequirementRelated' or other stereotypes generalizing it.
pattern RequirementRelated(Element : NamedElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "RequirementRelated");
}

//Pattern that queries the 'Refines' attribute of elements with the stereotype 'RequirementRelated'.
pattern RequirementRelated_Refines(Element : NamedElement, Value:    Element) {
	find RequirementRelated(Element, stereotype);
	find taggedValue(Element, stereotype, "Refines", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Satisfies' attribute of elements with the stereotype 'RequirementRelated'.
pattern RequirementRelated_Satisfies(Element : NamedElement, Value:    Element) {
	find RequirementRelated(Element, stereotype);
	find taggedValue(Element, stereotype, "Satisfies", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedFrom' attribute of elements with the stereotype 'RequirementRelated'.
pattern RequirementRelated_TracedFrom(Element : NamedElement, Value:    Element) {
	find RequirementRelated(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Verifies' attribute of elements with the stereotype 'RequirementRelated'.
pattern RequirementRelated_Verifies(Element : NamedElement, Value:    Element) {
	find RequirementRelated(Element, stereotype);
	find taggedValue(Element, stereotype, "Verifies", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//ModelElements

//Pattern that queries elements with the stereotype 'Conform' or other stereotypes generalizing it.
pattern Conform(Element : DirectedRelationship, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Conform");
}

//Pattern that queries elements with the stereotype 'ElementGroup' or other stereotypes generalizing it.
pattern ElementGroup(Element : Comment, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ElementGroup");
}

//Pattern that queries the 'criterion' attribute of elements with the stereotype 'ElementGroup'.
pattern ElementGroup_criterion(Element : Comment, Value: java String) {
	find ElementGroup(Element, stereotype);
	find taggedValue(Element, stereotype, "criterion", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'member' attribute of elements with the stereotype 'ElementGroup'.
pattern ElementGroup_member(Element : Comment, Value: Element) {
	find ElementGroup(Element, stereotype);
	find taggedValue(Element, stereotype, "member", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'name' attribute of elements with the stereotype 'ElementGroup'.
pattern ElementGroup_name(Element : Comment, Value: java String) {
	find ElementGroup(Element, stereotype);
	find taggedValue(Element, stereotype, "name", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'orderedMember' attribute of elements with the stereotype 'ElementGroup'.
pattern ElementGroup_orderedMember(Element : Comment, Value: Element) {
	find ElementGroup(Element, stereotype);
	find taggedValue(Element, stereotype, "orderedMember", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'size' attribute of elements with the stereotype 'ElementGroup'.
pattern ElementGroup_size(Element : Comment, Value: java Integer) {
	find ElementGroup(Element, stereotype);
	find taggedValue(Element, stereotype, "size", taggedValue);
	IntegerTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Expose' or other stereotypes generalizing it.
pattern Expose(Element : Dependency, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Expose");
}

//Pattern that queries elements with the stereotype 'Problem' or other stereotypes generalizing it.
pattern Problem(Element : Comment, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Problem");
}

//Pattern that queries elements with the stereotype 'Rationale' or other stereotypes generalizing it.
pattern Rationale(Element : Comment, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Rationale");
}

//Pattern that queries elements with the stereotype 'Stakeholder' or other stereotypes generalizing it.
pattern Stakeholder(Element : Classifier, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Stakeholder");
}

//Pattern that queries the 'concern' attribute of elements with the stereotype 'Stakeholder'.
pattern Stakeholder_concern(Element : Classifier, Value: Comment) {
	find Stakeholder(Element, stereotype);
	find taggedValue(Element, stereotype, "concern", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'concernList' attribute of elements with the stereotype 'Stakeholder'.
pattern Stakeholder_concernList(Element : Classifier, Value: Comment) {
	find Stakeholder(Element, stereotype);
	find taggedValue(Element, stereotype, "concernList", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'View' or other stereotypes generalizing it.
pattern View(Element : PackageableElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "View");
}

//Pattern that queries the 'stakeholder' attribute of elements with the stereotype 'View'.
pattern View_stakeholder(Element : PackageableElement, Value: Classifier) {
	find View(Element, stereotype);
	find taggedValue(Element, stereotype, "stakeholder", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'viewPoint' attribute of elements with the stereotype 'View'.
pattern View_viewPoint(Element : PackageableElement, Value: Class) {
	find View(Element, stereotype);
	find taggedValue(Element, stereotype, "viewPoint", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Viewpoint' or other stereotypes generalizing it.
pattern Viewpoint(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Viewpoint");
}

//Pattern that queries the 'concern' attribute of elements with the stereotype 'Viewpoint'.
pattern Viewpoint_concern(Element : Class, Value: java String) {
	find Viewpoint(Element, stereotype);
	find taggedValue(Element, stereotype, "concern", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'concernList' attribute of elements with the stereotype 'Viewpoint'.
pattern Viewpoint_concernList(Element : Class, Value: Comment) {
	find Viewpoint(Element, stereotype);
	find taggedValue(Element, stereotype, "concernList", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'language' attribute of elements with the stereotype 'Viewpoint'.
pattern Viewpoint_language(Element : Class, Value: java String) {
	find Viewpoint(Element, stereotype);
	find taggedValue(Element, stereotype, "language", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'method' attribute of elements with the stereotype 'Viewpoint'.
pattern Viewpoint_method(Element : Class, Value: Behavior) {
	find Viewpoint(Element, stereotype);
	find taggedValue(Element, stereotype, "method", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'presentation' attribute of elements with the stereotype 'Viewpoint'.
pattern Viewpoint_presentation(Element : Class, Value: java String) {
	find Viewpoint(Element, stereotype);
	find taggedValue(Element, stereotype, "presentation", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'purpose' attribute of elements with the stereotype 'Viewpoint'.
pattern Viewpoint_purpose(Element : Class, Value: java String) {
	find Viewpoint(Element, stereotype);
	find taggedValue(Element, stereotype, "purpose", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'stakeholder' attribute of elements with the stereotype 'Viewpoint'.
pattern Viewpoint_stakeholder(Element : Class, Value: Classifier) {
	find Viewpoint(Element, stereotype);
	find taggedValue(Element, stereotype, "stakeholder", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Non-normative: Activity

//Pattern that queries elements with the stereotype 'Essential' or other stereotypes generalizing it.
pattern Essential(Element : Activity, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Essential");
}

//Pattern that queries elements with the stereotype 'System process' or other stereotypes generalizing it.
pattern Systemprocess(Element : BehavioredClassifier, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "System process");
}

//Pattern that queries elements with the stereotype 'effbd' or other stereotypes generalizing it.
pattern effbd(Element : Activity, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "effbd");
}

//Pattern that queries elements with the stereotype 'nonStreaming' or other stereotypes generalizing it.
pattern nonStreaming(Element : Activity, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "nonStreaming");
}

//Pattern that queries elements with the stereotype 'streaming' or other stereotypes generalizing it.
pattern streaming(Element : Activity, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "streaming");
}

//Non-normative: Actors

//Pattern that queries elements with the stereotype 'Actuator' or other stereotypes generalizing it.
pattern Actuator(Element : Actor, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Actuator");
}

//Pattern that queries elements with the stereotype 'Boundary system' or other stereotypes generalizing it.
pattern Boundarysystem(Element : Actor, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Boundary system");
}

//Pattern that queries elements with the stereotype 'Environmental effect' or other stereotypes generalizing it.
pattern Environmentaleffect(Element : Actor, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Environmental effect");
}

//Pattern that queries elements with the stereotype 'External system' or other stereotypes generalizing it.
pattern Externalsystem(Element : Actor, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "External system");
}

//Pattern that queries elements with the stereotype 'Sensor' or other stereotypes generalizing it.
pattern Sensor(Element : Actor, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Sensor");
}

//Pattern that queries elements with the stereotype 'User system' or other stereotypes generalizing it.
pattern Usersystem(Element : Actor, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "User system");
}

//Non-normative: Block

//Pattern that queries elements with the stereotype 'Domain' or other stereotypes generalizing it.
pattern Domain(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Domain");
}

//Pattern that queries the 'isEncapsulated' attribute of elements with the stereotype 'Domain'.
pattern Domain_isEncapsulated(Element : Class, Value: java Boolean) {
	find Domain(Element, stereotype);
	find taggedValue(Element, stereotype, "isEncapsulated", taggedValue);
	BooleanTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'External' or other stereotypes generalizing it.
pattern External(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "External");
}

//Pattern that queries the 'isEncapsulated' attribute of elements with the stereotype 'External'.
pattern External_isEncapsulated(Element : Class, Value: java Boolean) {
	find External(Element, stereotype);
	find taggedValue(Element, stereotype, "isEncapsulated", taggedValue);
	BooleanTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Subsystem' or other stereotypes generalizing it.
pattern Subsystem(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Subsystem");
}

//Pattern that queries the 'isEncapsulated' attribute of elements with the stereotype 'Subsystem'.
pattern Subsystem_isEncapsulated(Element : Class, Value: java Boolean) {
	find Subsystem(Element, stereotype);
	find taggedValue(Element, stereotype, "isEncapsulated", taggedValue);
	BooleanTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'System' or other stereotypes generalizing it.
pattern System(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "System");
}

//Pattern that queries the 'isEncapsulated' attribute of elements with the stereotype 'System'.
pattern System_isEncapsulated(Element : Class, Value: java Boolean) {
	find System(Element, stereotype);
	find taggedValue(Element, stereotype, "isEncapsulated", taggedValue);
	BooleanTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'System context' or other stereotypes generalizing it.
pattern Systemcontext(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "System context");
}

//Pattern that queries the 'isEncapsulated' attribute of elements with the stereotype 'System context'.
pattern Systemcontext_isEncapsulated(Element : Class, Value: java Boolean) {
	find Systemcontext(Element, stereotype);
	find taggedValue(Element, stereotype, "isEncapsulated", taggedValue);
	BooleanTaggedValue.value(taggedValue, Value);
}

//Non-normative: Diagrams

//Pattern that queries elements with the stereotype 'BlockHierarchy' or other stereotypes generalizing it.
pattern BlockHierarchy(Element : Diagram, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "BlockHierarchy");
}

//Pattern that queries elements with the stereotype 'ContextDiagram' or other stereotypes generalizing it.
pattern ContextDiagram(Element : Diagram, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ContextDiagram");
}

//Pattern that queries elements with the stereotype 'Diagram Description' or other stereotypes generalizing it.
pattern DiagramDescription(Element : Diagram, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Diagram Description");
}

//Pattern that queries the 'Completion status' attribute of elements with the stereotype 'Diagram Description'.
pattern DiagramDescription_Completionstatus(Element : Diagram, Value: java String) {
	find DiagramDescription(Element, stereotype);
	find taggedValue(Element, stereotype, "Completion status", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Description' attribute of elements with the stereotype 'Diagram Description'.
pattern DiagramDescription_Description(Element : Diagram, Value: java String) {
	find DiagramDescription(Element, stereotype);
	find taggedValue(Element, stereotype, "Description", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Reference' attribute of elements with the stereotype 'Diagram Description'.
pattern DiagramDescription_Reference(Element : Diagram, Value: Element) {
	find DiagramDescription(Element, stereotype);
	find taggedValue(Element, stereotype, "Reference", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Version' attribute of elements with the stereotype 'Diagram Description'.
pattern DiagramDescription_Version(Element : Diagram, Value: java String) {
	find DiagramDescription(Element, stereotype);
	find taggedValue(Element, stereotype, "Version", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'SwimLaneDiagram' or other stereotypes generalizing it.
pattern SwimLaneDiagram(Element : Diagram, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "SwimLaneDiagram");
}

//Pattern that queries elements with the stereotype 'diagramUsage' or other stereotypes generalizing it.
pattern diagramUsage(Element : Diagram, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "diagramUsage");
}

//Non-normative: Distributions

//Pattern that queries elements with the stereotype 'BasicInterval' or other stereotypes generalizing it.
pattern BasicInterval(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "BasicInterval");
}

//Pattern that queries the 'max' attribute of elements with the stereotype 'BasicInterval'.
pattern BasicInterval_max(Element : Property, Value: java Double) {
	find BasicInterval(Element, stereotype);
	find taggedValue(Element, stereotype, "max", taggedValue);
	RealTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'min' attribute of elements with the stereotype 'BasicInterval'.
pattern BasicInterval_min(Element : Property, Value: java Double) {
	find BasicInterval(Element, stereotype);
	find taggedValue(Element, stereotype, "min", taggedValue);
	RealTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Interval' or other stereotypes generalizing it.
pattern Interval(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Interval");
}

//Pattern that queries elements with the stereotype 'Normal' or other stereotypes generalizing it.
pattern Normal(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Normal");
}

//Pattern that queries the 'mean' attribute of elements with the stereotype 'Normal'.
pattern Normal_mean(Element : Property, Value: java Double) {
	find Normal(Element, stereotype);
	find taggedValue(Element, stereotype, "mean", taggedValue);
	RealTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'standardDeviation' attribute of elements with the stereotype 'Normal'.
pattern Normal_standardDeviation(Element : Property, Value: java Double) {
	find Normal(Element, stereotype);
	find taggedValue(Element, stereotype, "standardDeviation", taggedValue);
	RealTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Uniform' or other stereotypes generalizing it.
pattern Uniform(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Uniform");
}

//Non-normative: Parametric

//Pattern that queries elements with the stereotype 'moe' or other stereotypes generalizing it.
pattern moe(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "moe");
}

//Pattern that queries elements with the stereotype 'objectiveFunction' or other stereotypes generalizing it.
pattern objectiveFunction(Element : ParameterableElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "objectiveFunction");
}

//Non-noramtive: Requirement

//Pattern that queries elements with the stereotype 'businessRequirement' or other stereotypes generalizing it.
pattern businessRequirement(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "businessRequirement");
}

//Pattern that queries the 'Derived' attribute of elements with the stereotype 'businessRequirement'.
pattern businessRequirement_Derived(Element : Class, Value:    Element) {
	find businessRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Derived", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'DerivedFrom' attribute of elements with the stereotype 'businessRequirement'.
pattern businessRequirement_DerivedFrom(Element : Class, Value:    Element) {
	find businessRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "DerivedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Id' attribute of elements with the stereotype 'businessRequirement'.
pattern businessRequirement_Id(Element : Class, Value: java String) {
	find businessRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Id", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Master' attribute of elements with the stereotype 'businessRequirement'.
pattern businessRequirement_Master(Element : Class, Value:    Element) {
	find businessRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Master", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'RefinedBy' attribute of elements with the stereotype 'businessRequirement'.
pattern businessRequirement_RefinedBy(Element : Class, Value: NamedElement) {
	find businessRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "RefinedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'SatisfiedBy' attribute of elements with the stereotype 'businessRequirement'.
pattern businessRequirement_SatisfiedBy(Element : Class, Value: NamedElement) {
	find businessRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "SatisfiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Text' attribute of elements with the stereotype 'businessRequirement'.
pattern businessRequirement_Text(Element : Class, Value: java String) {
	find businessRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Text", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedTo' attribute of elements with the stereotype 'businessRequirement'.
pattern businessRequirement_TracedTo(Element : Class, Value: NamedElement) {
	find businessRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'VerifiedBy' attribute of elements with the stereotype 'businessRequirement'.
pattern businessRequirement_VerifiedBy(Element : Class, Value: NamedElement) {
	find businessRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "VerifiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'designConstraint' or other stereotypes generalizing it.
pattern designConstraint(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "designConstraint");
}

//Pattern that queries the 'Derived' attribute of elements with the stereotype 'designConstraint'.
pattern designConstraint_Derived(Element : Class, Value:    Element) {
	find designConstraint(Element, stereotype);
	find taggedValue(Element, stereotype, "Derived", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'DerivedFrom' attribute of elements with the stereotype 'designConstraint'.
pattern designConstraint_DerivedFrom(Element : Class, Value:    Element) {
	find designConstraint(Element, stereotype);
	find taggedValue(Element, stereotype, "DerivedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Id' attribute of elements with the stereotype 'designConstraint'.
pattern designConstraint_Id(Element : Class, Value: java String) {
	find designConstraint(Element, stereotype);
	find taggedValue(Element, stereotype, "Id", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Master' attribute of elements with the stereotype 'designConstraint'.
pattern designConstraint_Master(Element : Class, Value:    Element) {
	find designConstraint(Element, stereotype);
	find taggedValue(Element, stereotype, "Master", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'RefinedBy' attribute of elements with the stereotype 'designConstraint'.
pattern designConstraint_RefinedBy(Element : Class, Value: NamedElement) {
	find designConstraint(Element, stereotype);
	find taggedValue(Element, stereotype, "RefinedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'SatisfiedBy' attribute of elements with the stereotype 'designConstraint'.
pattern designConstraint_SatisfiedBy(Element : Class, Value: NamedElement) {
	find designConstraint(Element, stereotype);
	find taggedValue(Element, stereotype, "SatisfiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Text' attribute of elements with the stereotype 'designConstraint'.
pattern designConstraint_Text(Element : Class, Value: java String) {
	find designConstraint(Element, stereotype);
	find taggedValue(Element, stereotype, "Text", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedTo' attribute of elements with the stereotype 'designConstraint'.
pattern designConstraint_TracedTo(Element : Class, Value: NamedElement) {
	find designConstraint(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'VerifiedBy' attribute of elements with the stereotype 'designConstraint'.
pattern designConstraint_VerifiedBy(Element : Class, Value: NamedElement) {
	find designConstraint(Element, stereotype);
	find taggedValue(Element, stereotype, "VerifiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'extendedRequirement' or other stereotypes generalizing it.
pattern extendedRequirement(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "extendedRequirement");
}

//Pattern that queries the 'Derived' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_Derived(Element : Class, Value:    Element) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Derived", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'DerivedFrom' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_DerivedFrom(Element : Class, Value:    Element) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "DerivedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Id' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_Id(Element : Class, Value: java String) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Id", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Master' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_Master(Element : Class, Value:    Element) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Master", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'RefinedBy' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_RefinedBy(Element : Class, Value: NamedElement) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "RefinedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'SatisfiedBy' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_SatisfiedBy(Element : Class, Value: NamedElement) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "SatisfiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Text' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_Text(Element : Class, Value: java String) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Text", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedTo' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_TracedTo(Element : Class, Value: NamedElement) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'VerifiedBy' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_VerifiedBy(Element : Class, Value: NamedElement) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "VerifiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'risk' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_risk(Element : Class, Value: EnumerationLiteral) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "risk", taggedValue);
	  ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'source' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_source(Element : Class, Value: java String) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "source", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'verifyMethod' attribute of elements with the stereotype 'extendedRequirement'.
pattern extendedRequirement_verifyMethod(Element : Class, Value: EnumerationLiteral) {
	find extendedRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "verifyMethod", taggedValue);
	  ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'functionalRequirement' or other stereotypes generalizing it.
pattern functionalRequirement(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "functionalRequirement");
}

//Pattern that queries the 'Derived' attribute of elements with the stereotype 'functionalRequirement'.
pattern functionalRequirement_Derived(Element : Class, Value:    Element) {
	find functionalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Derived", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'DerivedFrom' attribute of elements with the stereotype 'functionalRequirement'.
pattern functionalRequirement_DerivedFrom(Element : Class, Value:    Element) {
	find functionalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "DerivedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Id' attribute of elements with the stereotype 'functionalRequirement'.
pattern functionalRequirement_Id(Element : Class, Value: java String) {
	find functionalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Id", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Master' attribute of elements with the stereotype 'functionalRequirement'.
pattern functionalRequirement_Master(Element : Class, Value:    Element) {
	find functionalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Master", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'RefinedBy' attribute of elements with the stereotype 'functionalRequirement'.
pattern functionalRequirement_RefinedBy(Element : Class, Value: NamedElement) {
	find functionalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "RefinedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'SatisfiedBy' attribute of elements with the stereotype 'functionalRequirement'.
pattern functionalRequirement_SatisfiedBy(Element : Class, Value: NamedElement) {
	find functionalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "SatisfiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Text' attribute of elements with the stereotype 'functionalRequirement'.
pattern functionalRequirement_Text(Element : Class, Value: java String) {
	find functionalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Text", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedTo' attribute of elements with the stereotype 'functionalRequirement'.
pattern functionalRequirement_TracedTo(Element : Class, Value: NamedElement) {
	find functionalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'VerifiedBy' attribute of elements with the stereotype 'functionalRequirement'.
pattern functionalRequirement_VerifiedBy(Element : Class, Value: NamedElement) {
	find functionalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "VerifiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'interfaceRequirement' or other stereotypes generalizing it.
pattern interfaceRequirement(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "interfaceRequirement");
}

//Pattern that queries the 'Derived' attribute of elements with the stereotype 'interfaceRequirement'.
pattern interfaceRequirement_Derived(Element : Class, Value:    Element) {
	find interfaceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Derived", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'DerivedFrom' attribute of elements with the stereotype 'interfaceRequirement'.
pattern interfaceRequirement_DerivedFrom(Element : Class, Value:    Element) {
	find interfaceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "DerivedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Id' attribute of elements with the stereotype 'interfaceRequirement'.
pattern interfaceRequirement_Id(Element : Class, Value: java String) {
	find interfaceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Id", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Master' attribute of elements with the stereotype 'interfaceRequirement'.
pattern interfaceRequirement_Master(Element : Class, Value:    Element) {
	find interfaceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Master", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'RefinedBy' attribute of elements with the stereotype 'interfaceRequirement'.
pattern interfaceRequirement_RefinedBy(Element : Class, Value: NamedElement) {
	find interfaceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "RefinedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'SatisfiedBy' attribute of elements with the stereotype 'interfaceRequirement'.
pattern interfaceRequirement_SatisfiedBy(Element : Class, Value: NamedElement) {
	find interfaceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "SatisfiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Text' attribute of elements with the stereotype 'interfaceRequirement'.
pattern interfaceRequirement_Text(Element : Class, Value: java String) {
	find interfaceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Text", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedTo' attribute of elements with the stereotype 'interfaceRequirement'.
pattern interfaceRequirement_TracedTo(Element : Class, Value: NamedElement) {
	find interfaceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'VerifiedBy' attribute of elements with the stereotype 'interfaceRequirement'.
pattern interfaceRequirement_VerifiedBy(Element : Class, Value: NamedElement) {
	find interfaceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "VerifiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'performanceRequirement' or other stereotypes generalizing it.
pattern performanceRequirement(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "performanceRequirement");
}

//Pattern that queries the 'Derived' attribute of elements with the stereotype 'performanceRequirement'.
pattern performanceRequirement_Derived(Element : Class, Value:    Element) {
	find performanceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Derived", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'DerivedFrom' attribute of elements with the stereotype 'performanceRequirement'.
pattern performanceRequirement_DerivedFrom(Element : Class, Value:    Element) {
	find performanceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "DerivedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Id' attribute of elements with the stereotype 'performanceRequirement'.
pattern performanceRequirement_Id(Element : Class, Value: java String) {
	find performanceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Id", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Master' attribute of elements with the stereotype 'performanceRequirement'.
pattern performanceRequirement_Master(Element : Class, Value:    Element) {
	find performanceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Master", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'RefinedBy' attribute of elements with the stereotype 'performanceRequirement'.
pattern performanceRequirement_RefinedBy(Element : Class, Value: NamedElement) {
	find performanceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "RefinedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'SatisfiedBy' attribute of elements with the stereotype 'performanceRequirement'.
pattern performanceRequirement_SatisfiedBy(Element : Class, Value: NamedElement) {
	find performanceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "SatisfiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Text' attribute of elements with the stereotype 'performanceRequirement'.
pattern performanceRequirement_Text(Element : Class, Value: java String) {
	find performanceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Text", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedTo' attribute of elements with the stereotype 'performanceRequirement'.
pattern performanceRequirement_TracedTo(Element : Class, Value: NamedElement) {
	find performanceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'VerifiedBy' attribute of elements with the stereotype 'performanceRequirement'.
pattern performanceRequirement_VerifiedBy(Element : Class, Value: NamedElement) {
	find performanceRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "VerifiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'physicalRequirement' or other stereotypes generalizing it.
pattern physicalRequirement(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "physicalRequirement");
}

//Pattern that queries the 'Derived' attribute of elements with the stereotype 'physicalRequirement'.
pattern physicalRequirement_Derived(Element : Class, Value:    Element) {
	find physicalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Derived", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'DerivedFrom' attribute of elements with the stereotype 'physicalRequirement'.
pattern physicalRequirement_DerivedFrom(Element : Class, Value:    Element) {
	find physicalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "DerivedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Id' attribute of elements with the stereotype 'physicalRequirement'.
pattern physicalRequirement_Id(Element : Class, Value: java String) {
	find physicalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Id", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Master' attribute of elements with the stereotype 'physicalRequirement'.
pattern physicalRequirement_Master(Element : Class, Value:    Element) {
	find physicalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Master", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'RefinedBy' attribute of elements with the stereotype 'physicalRequirement'.
pattern physicalRequirement_RefinedBy(Element : Class, Value: NamedElement) {
	find physicalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "RefinedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'SatisfiedBy' attribute of elements with the stereotype 'physicalRequirement'.
pattern physicalRequirement_SatisfiedBy(Element : Class, Value: NamedElement) {
	find physicalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "SatisfiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Text' attribute of elements with the stereotype 'physicalRequirement'.
pattern physicalRequirement_Text(Element : Class, Value: java String) {
	find physicalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Text", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedTo' attribute of elements with the stereotype 'physicalRequirement'.
pattern physicalRequirement_TracedTo(Element : Class, Value: NamedElement) {
	find physicalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'VerifiedBy' attribute of elements with the stereotype 'physicalRequirement'.
pattern physicalRequirement_VerifiedBy(Element : Class, Value: NamedElement) {
	find physicalRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "VerifiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'usabilityRequirement' or other stereotypes generalizing it.
pattern usabilityRequirement(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "usabilityRequirement");
}

//Pattern that queries the 'Derived' attribute of elements with the stereotype 'usabilityRequirement'.
pattern usabilityRequirement_Derived(Element : Class, Value:    Element) {
	find usabilityRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Derived", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'DerivedFrom' attribute of elements with the stereotype 'usabilityRequirement'.
pattern usabilityRequirement_DerivedFrom(Element : Class, Value:    Element) {
	find usabilityRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "DerivedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Id' attribute of elements with the stereotype 'usabilityRequirement'.
pattern usabilityRequirement_Id(Element : Class, Value: java String) {
	find usabilityRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Id", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Master' attribute of elements with the stereotype 'usabilityRequirement'.
pattern usabilityRequirement_Master(Element : Class, Value:    Element) {
	find usabilityRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Master", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'RefinedBy' attribute of elements with the stereotype 'usabilityRequirement'.
pattern usabilityRequirement_RefinedBy(Element : Class, Value: NamedElement) {
	find usabilityRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "RefinedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'SatisfiedBy' attribute of elements with the stereotype 'usabilityRequirement'.
pattern usabilityRequirement_SatisfiedBy(Element : Class, Value: NamedElement) {
	find usabilityRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "SatisfiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Text' attribute of elements with the stereotype 'usabilityRequirement'.
pattern usabilityRequirement_Text(Element : Class, Value: java String) {
	find usabilityRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Text", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedTo' attribute of elements with the stereotype 'usabilityRequirement'.
pattern usabilityRequirement_TracedTo(Element : Class, Value: NamedElement) {
	find usabilityRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'VerifiedBy' attribute of elements with the stereotype 'usabilityRequirement'.
pattern usabilityRequirement_VerifiedBy(Element : Class, Value: NamedElement) {
	find usabilityRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "VerifiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Ports&Flows

//Pattern that queries elements with the stereotype 'AcceptChangeStructuralFeatureEventAction' or other stereotypes generalizing it.
pattern AcceptChangeStructuralFeatureEventAction(Element : AcceptEventAction, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "AcceptChangeStructuralFeatureEventAction");
}

//Pattern that queries elements with the stereotype 'AddFlowPropertyValueOnNestedPortAction' or other stereotypes generalizing it.
pattern AddFlowPropertyValueOnNestedPortAction(Element : AddStructuralFeatureValueAction, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "AddFlowPropertyValueOnNestedPortAction");
}

//Pattern that queries the 'onNestedPort' attribute of elements with the stereotype 'AddFlowPropertyValueOnNestedPortAction'.
pattern AddFlowPropertyValueOnNestedPortAction_onNestedPort(Element : AddStructuralFeatureValueAction, Value: Port) {
	find AddFlowPropertyValueOnNestedPortAction(Element, stereotype);
	find taggedValue(Element, stereotype, "onNestedPort", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'ChangeStructuralFeatureEvent' or other stereotypes generalizing it.
pattern ChangeStructuralFeatureEvent(Element : ChangeEvent, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ChangeStructuralFeatureEvent");
}

//Pattern that queries the 'structuralFeature' attribute of elements with the stereotype 'ChangeStructuralFeatureEvent'.
pattern ChangeStructuralFeatureEvent_structuralFeature(Element : ChangeEvent, Value: StructuralFeature) {
	find ChangeStructuralFeatureEvent(Element, stereotype);
	find taggedValue(Element, stereotype, "structuralFeature", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'DirectedFeature' or other stereotypes generalizing it.
pattern DirectedFeature(Element : Feature, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "DirectedFeature");
}

//Pattern that queries the 'featureDirection' attribute of elements with the stereotype 'DirectedFeature'.
pattern DirectedFeature_featureDirection(Element : Feature, Value: EnumerationLiteral) {
	find DirectedFeature(Element, stereotype);
	find taggedValue(Element, stereotype, "featureDirection", taggedValue);
	  ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'FlowProperty' or other stereotypes generalizing it.
pattern FlowProperty(Element : Property, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "FlowProperty");
}

//Pattern that queries the 'direction' attribute of elements with the stereotype 'FlowProperty'.
pattern FlowProperty_direction(Element : Property, Value: EnumerationLiteral) {
	find FlowProperty(Element, stereotype);
	find taggedValue(Element, stereotype, "direction", taggedValue);
	  ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'FullPort' or other stereotypes generalizing it.
pattern FullPort(Element : Port, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "FullPort");
}

//Pattern that queries elements with the stereotype 'InterfaceBlock' or other stereotypes generalizing it.
pattern InterfaceBlock(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "InterfaceBlock");
}

//Pattern that queries the 'isEncapsulated' attribute of elements with the stereotype 'InterfaceBlock'.
pattern InterfaceBlock_isEncapsulated(Element : Class, Value: java Boolean) {
	find InterfaceBlock(Element, stereotype);
	find taggedValue(Element, stereotype, "isEncapsulated", taggedValue);
	BooleanTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'InvocationOnNestedPortAction' or other stereotypes generalizing it.
pattern InvocationOnNestedPortAction(Element : InvocationAction, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "InvocationOnNestedPortAction");
}

//Pattern that queries the 'onNestedPort' attribute of elements with the stereotype 'InvocationOnNestedPortAction'.
pattern InvocationOnNestedPortAction_onNestedPort(Element : InvocationAction, Value: Port) {
	find InvocationOnNestedPortAction(Element, stereotype);
	find taggedValue(Element, stereotype, "onNestedPort", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'ItemFlow' or other stereotypes generalizing it.
pattern ItemFlow(Element : InformationFlow, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ItemFlow");
}

//Pattern that queries the 'itemProperty' attribute of elements with the stereotype 'ItemFlow'.
pattern ItemFlow_itemProperty(Element : InformationFlow, Value: Property) {
	find ItemFlow(Element, stereotype);
	find taggedValue(Element, stereotype, "itemProperty", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'ProxyPort' or other stereotypes generalizing it.
pattern ProxyPort(Element : Port, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "ProxyPort");
}

//Pattern that queries elements with the stereotype 'TriggerOnNestedPort' or other stereotypes generalizing it.
pattern TriggerOnNestedPort(Element : Trigger, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "TriggerOnNestedPort");
}

//Pattern that queries the 'onNestedPort' attribute of elements with the stereotype 'TriggerOnNestedPort'.
pattern TriggerOnNestedPort_onNestedPort(Element : Trigger, Value: Port) {
	find TriggerOnNestedPort(Element, stereotype);
	find taggedValue(Element, stereotype, "onNestedPort", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'original' attribute of elements with the stereotype '~InterfaceBlock'.
pattern InterfaceBlock_original(Element : Class, Value: Class) {
	find InterfaceBlock(Element, stereotype);
	find taggedValue(Element, stereotype, "original", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Requirements

//Pattern that queries elements with the stereotype 'AbstractRequirement' or other stereotypes generalizing it.
pattern AbstractRequirement(Element : NamedElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "AbstractRequirement");
}

//Pattern that queries the 'Derived' attribute of elements with the stereotype 'AbstractRequirement'.
pattern AbstractRequirement_Derived(Element : NamedElement, Value: NamedElement) {
	find AbstractRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Derived", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'DerivedFrom' attribute of elements with the stereotype 'AbstractRequirement'.
pattern AbstractRequirement_DerivedFrom(Element : NamedElement, Value: NamedElement) {
	find AbstractRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "DerivedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Id' attribute of elements with the stereotype 'AbstractRequirement'.
pattern AbstractRequirement_Id(Element : NamedElement, Value: java String) {
	find AbstractRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Id", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Master' attribute of elements with the stereotype 'AbstractRequirement'.
pattern AbstractRequirement_Master(Element : NamedElement, Value: NamedElement) {
	find AbstractRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Master", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'RefinedBy' attribute of elements with the stereotype 'AbstractRequirement'.
pattern AbstractRequirement_RefinedBy(Element : NamedElement, Value: NamedElement) {
	find AbstractRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "RefinedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'SatisfiedBy' attribute of elements with the stereotype 'AbstractRequirement'.
pattern AbstractRequirement_SatisfiedBy(Element : NamedElement, Value: NamedElement) {
	find AbstractRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "SatisfiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Text' attribute of elements with the stereotype 'AbstractRequirement'.
pattern AbstractRequirement_Text(Element : NamedElement, Value: java String) {
	find AbstractRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Text", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedTo' attribute of elements with the stereotype 'AbstractRequirement'.
pattern AbstractRequirement_TracedTo(Element : NamedElement, Value: NamedElement) {
	find AbstractRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'VerifiedBy' attribute of elements with the stereotype 'AbstractRequirement'.
pattern AbstractRequirement_VerifiedBy(Element : NamedElement, Value: NamedElement) {
	find AbstractRequirement(Element, stereotype);
	find taggedValue(Element, stereotype, "VerifiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Copy' or other stereotypes generalizing it.
pattern Copy(Element : Abstraction, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Copy");
}

//Pattern that queries the 'sourceContext' attribute of elements with the stereotype 'Copy'.
pattern Copy_sourceContext(Element : Abstraction, Value: Classifier) {
	find Copy(Element, stereotype);
	find taggedValue(Element, stereotype, "sourceContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'sourcePropertyPath' attribute of elements with the stereotype 'Copy'.
pattern Copy_sourcePropertyPath(Element : Abstraction, Value: Property) {
	find Copy(Element, stereotype);
	find taggedValue(Element, stereotype, "sourcePropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetContext' attribute of elements with the stereotype 'Copy'.
pattern Copy_targetContext(Element : Abstraction, Value: Classifier) {
	find Copy(Element, stereotype);
	find taggedValue(Element, stereotype, "targetContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetPropertyPath' attribute of elements with the stereotype 'Copy'.
pattern Copy_targetPropertyPath(Element : Abstraction, Value: Property) {
	find Copy(Element, stereotype);
	find taggedValue(Element, stereotype, "targetPropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'DeriveReqt' or other stereotypes generalizing it.
pattern DeriveReqt(Element : Abstraction, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "DeriveReqt");
}

//Pattern that queries the 'sourceContext' attribute of elements with the stereotype 'DeriveReqt'.
pattern DeriveReqt_sourceContext(Element : Abstraction, Value: Classifier) {
	find DeriveReqt(Element, stereotype);
	find taggedValue(Element, stereotype, "sourceContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'sourcePropertyPath' attribute of elements with the stereotype 'DeriveReqt'.
pattern DeriveReqt_sourcePropertyPath(Element : Abstraction, Value: Property) {
	find DeriveReqt(Element, stereotype);
	find taggedValue(Element, stereotype, "sourcePropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetContext' attribute of elements with the stereotype 'DeriveReqt'.
pattern DeriveReqt_targetContext(Element : Abstraction, Value: Classifier) {
	find DeriveReqt(Element, stereotype);
	find taggedValue(Element, stereotype, "targetContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetPropertyPath' attribute of elements with the stereotype 'DeriveReqt'.
pattern DeriveReqt_targetPropertyPath(Element : Abstraction, Value: Property) {
	find DeriveReqt(Element, stereotype);
	find taggedValue(Element, stereotype, "targetPropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Refine' or other stereotypes generalizing it.
pattern Refine(Element : Abstraction, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Refine");
}

//Pattern that queries the 'sourceContext' attribute of elements with the stereotype 'Refine'.
pattern Refine_sourceContext(Element : Abstraction, Value: Classifier) {
	find Refine(Element, stereotype);
	find taggedValue(Element, stereotype, "sourceContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'sourcePropertyPath' attribute of elements with the stereotype 'Refine'.
pattern Refine_sourcePropertyPath(Element : Abstraction, Value: Property) {
	find Refine(Element, stereotype);
	find taggedValue(Element, stereotype, "sourcePropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetContext' attribute of elements with the stereotype 'Refine'.
pattern Refine_targetContext(Element : Abstraction, Value: Classifier) {
	find Refine(Element, stereotype);
	find taggedValue(Element, stereotype, "targetContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetPropertyPath' attribute of elements with the stereotype 'Refine'.
pattern Refine_targetPropertyPath(Element : Abstraction, Value: Property) {
	find Refine(Element, stereotype);
	find taggedValue(Element, stereotype, "targetPropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Requirement' or other stereotypes generalizing it.
pattern Requirement(Element : Class, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Requirement");
}

//Pattern that queries the 'Derived' attribute of elements with the stereotype 'Requirement'.
pattern Requirement_Derived(Element : Class, Value: NamedElement) {
	find Requirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Derived", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'DerivedFrom' attribute of elements with the stereotype 'Requirement'.
pattern Requirement_DerivedFrom(Element : Class, Value: NamedElement) {
	find Requirement(Element, stereotype);
	find taggedValue(Element, stereotype, "DerivedFrom", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Id' attribute of elements with the stereotype 'Requirement'.
pattern Requirement_Id(Element : Class, Value: java String) {
	find Requirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Id", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Master' attribute of elements with the stereotype 'Requirement'.
pattern Requirement_Master(Element : Class, Value: NamedElement) {
	find Requirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Master", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'RefinedBy' attribute of elements with the stereotype 'Requirement'.
pattern Requirement_RefinedBy(Element : Class, Value: NamedElement) {
	find Requirement(Element, stereotype);
	find taggedValue(Element, stereotype, "RefinedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'SatisfiedBy' attribute of elements with the stereotype 'Requirement'.
pattern Requirement_SatisfiedBy(Element : Class, Value: NamedElement) {
	find Requirement(Element, stereotype);
	find taggedValue(Element, stereotype, "SatisfiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'Text' attribute of elements with the stereotype 'Requirement'.
pattern Requirement_Text(Element : Class, Value: java String) {
	find Requirement(Element, stereotype);
	find taggedValue(Element, stereotype, "Text", taggedValue);
	StringTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'TracedTo' attribute of elements with the stereotype 'Requirement'.
pattern Requirement_TracedTo(Element : Class, Value: NamedElement) {
	find Requirement(Element, stereotype);
	find taggedValue(Element, stereotype, "TracedTo", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'VerifiedBy' attribute of elements with the stereotype 'Requirement'.
pattern Requirement_VerifiedBy(Element : Class, Value: NamedElement) {
	find Requirement(Element, stereotype);
	find taggedValue(Element, stereotype, "VerifiedBy", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Satisfy' or other stereotypes generalizing it.
pattern Satisfy(Element : Abstraction, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Satisfy");
}

//Pattern that queries the 'sourceContext' attribute of elements with the stereotype 'Satisfy'.
pattern Satisfy_sourceContext(Element : Abstraction, Value: Classifier) {
	find Satisfy(Element, stereotype);
	find taggedValue(Element, stereotype, "sourceContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'sourcePropertyPath' attribute of elements with the stereotype 'Satisfy'.
pattern Satisfy_sourcePropertyPath(Element : Abstraction, Value: Property) {
	find Satisfy(Element, stereotype);
	find taggedValue(Element, stereotype, "sourcePropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetContext' attribute of elements with the stereotype 'Satisfy'.
pattern Satisfy_targetContext(Element : Abstraction, Value: Classifier) {
	find Satisfy(Element, stereotype);
	find taggedValue(Element, stereotype, "targetContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetPropertyPath' attribute of elements with the stereotype 'Satisfy'.
pattern Satisfy_targetPropertyPath(Element : Abstraction, Value: Property) {
	find Satisfy(Element, stereotype);
	find taggedValue(Element, stereotype, "targetPropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'TestCase' or other stereotypes generalizing it.
pattern TestCase(Element : ParameterableElement, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "TestCase");
}

//Pattern that queries elements with the stereotype 'Trace' or other stereotypes generalizing it.
pattern Trace(Element : Abstraction, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Trace");
}

//Pattern that queries the 'sourceContext' attribute of elements with the stereotype 'Trace'.
pattern Trace_sourceContext(Element : Abstraction, Value: Classifier) {
	find Trace(Element, stereotype);
	find taggedValue(Element, stereotype, "sourceContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'sourcePropertyPath' attribute of elements with the stereotype 'Trace'.
pattern Trace_sourcePropertyPath(Element : Abstraction, Value: Property) {
	find Trace(Element, stereotype);
	find taggedValue(Element, stereotype, "sourcePropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetContext' attribute of elements with the stereotype 'Trace'.
pattern Trace_targetContext(Element : Abstraction, Value: Classifier) {
	find Trace(Element, stereotype);
	find taggedValue(Element, stereotype, "targetContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetPropertyPath' attribute of elements with the stereotype 'Trace'.
pattern Trace_targetPropertyPath(Element : Abstraction, Value: Property) {
	find Trace(Element, stereotype);
	find taggedValue(Element, stereotype, "targetPropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries elements with the stereotype 'Verify' or other stereotypes generalizing it.
pattern Verify(Element : Abstraction, Stereotype : Stereotype) {
	find stereotypedElement(Element, Stereotype, "SysML", "Verify");
}

//Pattern that queries the 'sourceContext' attribute of elements with the stereotype 'Verify'.
pattern Verify_sourceContext(Element : Abstraction, Value: Classifier) {
	find Verify(Element, stereotype);
	find taggedValue(Element, stereotype, "sourceContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'sourcePropertyPath' attribute of elements with the stereotype 'Verify'.
pattern Verify_sourcePropertyPath(Element : Abstraction, Value: Property) {
	find Verify(Element, stereotype);
	find taggedValue(Element, stereotype, "sourcePropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetContext' attribute of elements with the stereotype 'Verify'.
pattern Verify_targetContext(Element : Abstraction, Value: Classifier) {
	find Verify(Element, stereotype);
	find taggedValue(Element, stereotype, "targetContext", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}

//Pattern that queries the 'targetPropertyPath' attribute of elements with the stereotype 'Verify'.
pattern Verify_targetPropertyPath(Element : Abstraction, Value: Property) {
	find Verify(Element, stereotype);
	find taggedValue(Element, stereotype, "targetPropertyPath", taggedValue);
	ElementTaggedValue.value(taggedValue, Value);
}
